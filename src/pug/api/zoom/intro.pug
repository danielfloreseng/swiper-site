p Swiper supports zoom images functionality (similar to what you see on iOS when browsing single photo) where you can zoom-in image by pinch gesture and or by zoom-in/out by double tap on it. In this case, additional layout is required:
:code(lang="html")
  &lt;div class="swiper-container"&gt;
      &lt;div class="swiper-wrapper"&gt;
          &lt;div class="swiper-slide"&gt;
              &lt;div class="swiper-zoom-container"&gt;
                  &lt;img src="path/to/image1.jpg"&gt;
              &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="swiper-slide"&gt;
              &lt;div class="swiper-zoom-container"&gt;
                  &lt;img src="path/to/image2.jpg"&gt;
              &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="swiper-slide"&gt;Plain slide with text&lt;/div&gt;
          &lt;div class="swiper-slide"&gt;
              &lt;!-- Override maxRatio parameter --&gt;
              &lt;div class="swiper-zoom-container" data-swiper-zoom="5"&gt;
                  &lt;img src="path/to/image1.jpg"&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;
  &lt;/div&gt;
ul
  li
    p All "zoomable" images should be wrapped with the div with <code>swiper-zoom-container</code> class.
  li
    p By default it expects to zoom one of the <code>img</code>, <code>picture</code> or <code>canvas</code> element. If you want to make zoom on some other custom element, then just add <code>swiper-zoom-target</code> class to this element. For example:
    :code(lang="html")
      <div class="swiper-container">
        <div class="swiper-wrapper">
          <div class="swiper-slide">
            <div class="swiper-zoom-container">
              <!-- custom zoomable element -->
              <div class="swiper-zoom-target" style="background-image: url(...)"></div>
            </div>
          </div>
      </div>
  li
    p You can override <code>maxRatio</code> parameter for specific slides by using <code>data-swiper-zoom</code> attribute on zoom container.
